<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.example.board.mvc.repository.BoardRepository">

    <!-- insert 메서드에 대한 매핑 -->
    <insert id="insert" parameterType="org.example.board.domain.Board">
        INSERT INTO board (title, writer, content)
        VALUES (#{title}, #{writer}, #{content});
    </insert>

    <!-- update 메서드에 대한 매핑 -->
    <update id="update" parameterType="org.example.board.domain.Board">
        UPDATE board
        <set>
            <if test="title != null and title.length() > 0">title = #{title},</if>
            <if test="writer != null and writer.length() > 0">writer = #{writer},</if>
            <if test="content != null and content.length() > 0">content = #{content},</if>
            <if test="readCount != null">read_count = #{readCount},</if>
        </set>
        WHERE id = #{id};
    </update>

    <!-- delete 메서드에 대한 매핑 -->
    <delete id="delete" parameterType="long">
        DELETE FROM board WHERE id = #{id};
    </delete>

    <!-- selectAll 메서드에 대한 매핑 -->
    <select id="selectAll" resultType="org.example.board.domain.Board">
        SELECT id, title, writer, content, read_count, created_at
        FROM board;
    </select>

    <!-- selectOne 메서드에 대한 매핑 -->
    <select id="selectOne" parameterType="long" resultMap="rrr">
        SELECT id, title, writer, content, read_count, created_at
        FROM board
        WHERE id = #{id};
    </select>

    <select id="selectPageList" resultType="org.example.board.domain.Board">
        SELECT id, title, writer, read_count, created_at from board
        order by created_at desc
        limit #{sr}, #{cnt}
    </select>

    <select id="selectCount" resultType="java.lang.Integer">
        SELECT COUNT(*) FROM BOARD;
    </select>

    <resultMap id="rrr" type="org.example.board.domain.Board">
        <result property="readCount" column="read_count" />
        <result property="createdAt" column="created_at"/>
    </resultMap>
</mapper>
